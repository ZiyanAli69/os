import subprocess
import psutil
import os
import time

# Dictionary to keep track of processes
processes = {}

def start_process(command):
    """Start a new process and add it to the process dictionary."""
    try:
        proc = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        processes[proc.pid] = proc
        print(f"Process started with PID {proc.pid}")
    except Exception as e:
        print(f"Failed to start process: {e}")

def terminate_process(pid):
    """Terminate a process by PID."""
    if pid in processes:
        proc = processes[pid]
        proc.terminate()
        proc.wait()  # Ensure the process has terminated
        print(f"Process with PID {pid} terminated")
        del processes[pid]
    else:
        print(f"No process found with PID {pid}")

def get_process_status(pid):
    """Get the status of a process by PID."""
    if pid in processes:
        proc = processes[pid]
        try:
            proc_status = psutil.Process(pid).status()
            print(f"Process with PID {pid} is {proc_status}")
        except psutil.NoSuchProcess:
            print(f"Process with PID {pid} no longer exists")
    else:
        print(f"No process found with PID {pid}")

def list_processes():
    """List all managed processes."""
    if processes:
        print("Managed processes:")
        for pid in processes:
            try:
                proc = psutil.Process(pid)
                print(f"PID {pid} - Name: {proc.name()}, Status: {proc.status()}")
            except psutil.NoSuchProcess:
                print(f"PID {pid} - Process no longer exists")
    else:
        print("No processes are currently being managed")

def main():
    while True:
        print("\nProcess Management Menu")
        print("1. Start a process")
        print("2. Terminate a process")
        print("3. Get process status")
        print("4. List all processes")
        print("5. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            command = input("Enter the command to start the process: ")
            start_process(command)
        elif choice == '2':
            pid = int(input("Enter the PID of the process to terminate: "))
            terminate_process(pid)
        elif choice == '3':
            pid = int(input("Enter the PID of the process to get status: "))
            get_process_status(pid)
        elif choice == '4':
            list_processes()
        elif choice == '5':
            print("Exiting...")
            break
        else:
            print("Invalid choice. Please try again.")

        time.sleep(1)

if __name__ == "__main__":
    main()
1
